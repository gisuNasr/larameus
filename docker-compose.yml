version: '3.7'

services:
  mysql:
    image : mysql:8.0
    restart: unless-stopped
    env_file: ./docker/mysql/.env
    ports:
      - "3310:3306"
    volumes :
      - "./docker/data/mysql/larameus:/var/lib/mysql"
      - "./docker/data/mysql/backup:/data/backups"
      -  "./docker/mysql/my.cnf:/etc/mysql/my.cnf"
    networks:
      - larameus_network
  php :
    build : ./docker/php
    restart: unless-stopped
    ports:
      - "9200:9000"
    volumes :
      - "../src:/var/www/larameus"
      - "./docker/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini"
    networks:
      - larameus_network
  nginx:
    hostname: larameus_nginx
    build: ./docker/nginx
    restart: always
    ports:
      - "8040:80"
    volumes:
      - "./docker/nginx/conf.d:/etc/nginx/conf.d/"
      - "../src:/var/www/larameus"
    networks:
      - larameus_network
  redis:
    hostname: larameus_redis
    build: ./docker/redis
    ports:
      - "6381:6379"
    expose:
      - '6379'
    volumes:
      - ./docker/data/redis:/data
    sysctls:
      - net.core.somaxconn=511
    restart: always
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    networks:
      - larameus_network
  ##################### Monitoring #################
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090
    links:
      - alertmanager:alertmanager
    networks:
      - larameus_network
    restart: always

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - larameus_network
    restart: always
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./docker/alertmanager/:/etc/alertmanager/
    networks:
      - larameus_network
    restart: always
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./docker/grafana/config.monitoring
    networks:
      - larameus_network
    restart: always

####################### VOLUME AND NETWORKS #######################
volumes:
  redis:
  prometheus_data:
  grafana_data:


networks:
  larameus_network:
    driver: bridge
